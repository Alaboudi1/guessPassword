(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))u(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&u(o)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function u(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();const i="c",d="g2",a="fh",l="jb3",f="A4",g="Bc5",m="Aa1Bb2Cc3Dd4Ee5Ff6";let c=0;const p=(s,r)=>{switch(r){case 1:return s===i;case 2:return s===d;case 3:return s===a;case 4:return s===l;case 5:return s===f;case 6:return s===g;case 7:return s===m;default:return!1}},h=()=>{const s=parseInt(document.getElementById("passwordType").value),r=document.getElementById("passwordInput").value,n=p(r,s);c++,document.getElementById("result").innerHTML=n?`<b>${r}</b> is Correct!👏🏻 You have guessed <b> ${c} </b>  times.`:`<b>${r}</b> is Incorrect!❌ You have guessed <b> ${c} </b>  times.`};document.getElementById("guess").addEventListener("click",h);
